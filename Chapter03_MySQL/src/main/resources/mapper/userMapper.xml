<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="userSQL">



  <!-- UserDTO 의 필드와 테이블의 컬럼명이 틀린 경우 -->
<!--   <resultMap type="user.bean.UserDTO" id="userResult"> -->
  	<!-- <result property="DTO의 필드명" column="테이블의 필드명"/> -->
<!--   		<result property="name" column="NAME"/> -->
 <!--  </resultMap> -->
  
  
  
  
	<insert id="write" parameterType="user">
		insert into usertable values(#{name},#{id},#{pwd})
	</insert>
	<select id="isExistId" parameterType="String" resultType="boolean">
		select count(*) from usertable where id=#{id}
	</select>
	<select id="getList" resultType="user">
		select * from usertable
	</select>
	<select id="getUser" resultType="user" parameterType="String">
		select * from usertable where id=#{id}
	</select>
	<update id="update" parameterType="java.util.Map">
		update usertable set name=#{name}, pwd=#{pwd} where id=#{id}
	</update>
	<delete id="delete" parameterType="String">
		delete from usertable where id=#{id} <!-- MySQL에서는 반드시 from을 써야한다. -->
	</delete>
	<select id="search" resultType="user" parameterType="user">
		select * from usertable where 
		<if test="name != null">
			name like concat('%',#{name},'%')
		</if>
		<if test="id != null">
			id like concat('%',#{id},'%')
		</if>
		
		
<!-- 	<choose>
		<when test="조건">
			name like '%'||#{name}||'%'
		</when>
		<otherwise>
			id like '%'||#{id}||'%'
		</otherwise>
	</choose> -->
	
	
	<!-- select * from usertable where ${colNum} like '%'||#{name}||'%' -->
	
	</select>
</mapper>




<!-- 
Oracle - 연결연산자(||)
       - concat(인수, 인수) => 인수는 2개만 
       
select * from usertable where ${searchOption} like '%' || #{keyword} || '%'



MySQL - 연결연산자(||) 없다
      - concat(인수, 인수) => 인수는 2개 이상 써도 된다 
      
select * from usertable where ${searchOption} like concat('%', #{keyword}, '%')
 -->